/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as AuthImport } from './routes/_auth'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as DashboardSettingsIndexImport } from './routes/_dashboard/settings/index'
import { Route as DashboardProductsIndexImport } from './routes/_dashboard/products/index'
import { Route as DashboardOrdersIndexImport } from './routes/_dashboard/orders/index'
import { Route as DashboardCustomersIndexImport } from './routes/_dashboard/customers/index'
import { Route as DashboardAccountIndexImport } from './routes/_dashboard/account/index'
import { Route as DashboardProductsProductIdImport } from './routes/_dashboard/products/$productId'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProductsIndexRoute = DashboardProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrdersIndexRoute = DashboardOrdersIndexImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCustomersIndexRoute = DashboardCustomersIndexImport.update({
  id: '/customers/',
  path: '/customers/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAccountIndexRoute = DashboardAccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProductsProductIdRoute = DashboardProductsProductIdImport.update(
  {
    id: '/products/$productId',
    path: '/products/$productId',
    getParentRoute: () => DashboardRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/products/$productId': {
      id: '/_dashboard/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof DashboardProductsProductIdImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/account/': {
      id: '/_dashboard/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof DashboardAccountIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/customers/': {
      id: '/_dashboard/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof DashboardCustomersIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/orders/': {
      id: '/_dashboard/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof DashboardOrdersIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/products/': {
      id: '/_dashboard/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof DashboardProductsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/settings/': {
      id: '/_dashboard/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardSettingsIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardProductsProductIdRoute: typeof DashboardProductsProductIdRoute
  DashboardAccountIndexRoute: typeof DashboardAccountIndexRoute
  DashboardCustomersIndexRoute: typeof DashboardCustomersIndexRoute
  DashboardOrdersIndexRoute: typeof DashboardOrdersIndexRoute
  DashboardProductsIndexRoute: typeof DashboardProductsIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardProductsProductIdRoute: DashboardProductsProductIdRoute,
  DashboardAccountIndexRoute: DashboardAccountIndexRoute,
  DashboardCustomersIndexRoute: DashboardCustomersIndexRoute,
  DashboardOrdersIndexRoute: DashboardOrdersIndexRoute,
  DashboardProductsIndexRoute: DashboardProductsIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DashboardRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/': typeof DashboardIndexRoute
  '/products/$productId': typeof DashboardProductsProductIdRoute
  '/account': typeof DashboardAccountIndexRoute
  '/customers': typeof DashboardCustomersIndexRoute
  '/orders': typeof DashboardOrdersIndexRoute
  '/products': typeof DashboardProductsIndexRoute
  '/settings': typeof DashboardSettingsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/': typeof DashboardIndexRoute
  '/products/$productId': typeof DashboardProductsProductIdRoute
  '/account': typeof DashboardAccountIndexRoute
  '/customers': typeof DashboardCustomersIndexRoute
  '/orders': typeof DashboardOrdersIndexRoute
  '/products': typeof DashboardProductsIndexRoute
  '/settings': typeof DashboardSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_dashboard/': typeof DashboardIndexRoute
  '/_dashboard/products/$productId': typeof DashboardProductsProductIdRoute
  '/_dashboard/account/': typeof DashboardAccountIndexRoute
  '/_dashboard/customers/': typeof DashboardCustomersIndexRoute
  '/_dashboard/orders/': typeof DashboardOrdersIndexRoute
  '/_dashboard/products/': typeof DashboardProductsIndexRoute
  '/_dashboard/settings/': typeof DashboardSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/'
    | '/products/$productId'
    | '/account'
    | '/customers'
    | '/orders'
    | '/products'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/register'
    | '/'
    | '/products/$productId'
    | '/account'
    | '/customers'
    | '/orders'
    | '/products'
    | '/settings'
  id:
    | '__root__'
    | '/_auth'
    | '/_dashboard'
    | '/_auth/login'
    | '/_auth/register'
    | '/_dashboard/'
    | '/_dashboard/products/$productId'
    | '/_dashboard/account/'
    | '/_dashboard/customers/'
    | '/_dashboard/orders/'
    | '/_dashboard/products/'
    | '/_dashboard/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_dashboard"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/",
        "/_dashboard/products/$productId",
        "/_dashboard/account/",
        "/_dashboard/customers/",
        "/_dashboard/orders/",
        "/_dashboard/products/",
        "/_dashboard/settings/"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/products/$productId": {
      "filePath": "_dashboard/products/$productId.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/account/": {
      "filePath": "_dashboard/account/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/customers/": {
      "filePath": "_dashboard/customers/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/orders/": {
      "filePath": "_dashboard/orders/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/products/": {
      "filePath": "_dashboard/products/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/settings/": {
      "filePath": "_dashboard/settings/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
